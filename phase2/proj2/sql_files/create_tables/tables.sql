



CREATE DATABASE PROJ2;
CREATE USER 's_user'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON PROJ2.* TO 's_user'@'localhost';

CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON PROJ1.* TO 'newuser'@'localhost';


use PROJ2;



CREATE TABLE USERS (
    U_ID          BIGINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME    VARCHAR(20) NOT NULL,
    LAST_NAME     VARCHAR(20) NOT NULL,
    USER_NAME     VARCHAR(20) NOT NULL UNIQUE,
    PASSWORD      VARCHAR(128) NOT NULL,
    BIRTH_DATE    DATE,
    REGISTER_DATE DATE,
    BIOGRAPHY     VARCHAR(64)

);

CREATE TABLE AVA (
    A_ID BIGINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    SENDER_ID BIGINT UNSIGNED NOT NULL,
    CONTEXT VARCHAR(256) NOT NULL,
    SEND_DATE DATETIME NOT NULL DEFAULT NOW(),
    COMMENT_TO_AVA_ID BIGINT UNSIGNED DEFAULT NULL,
    FOREIGN KEY (SENDER_ID) REFERENCES USERS(U_ID) ON UPDATE CASCADE,
    FOREIGN KEY (COMMENT_TO_AVA_ID) REFERENCES AVA(A_ID) ON UPDATE CASCADE
);



CREATE TABLE AVA_LOGS (
    A_ID BIGINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    SENDER_ID BIGINT UNSIGNED NOT NULL,
    SEND_DATE DATETIME NOT NULL DEFAULT NOW(),

    FOREIGN KEY (A_ID) REFERENCES AVA(A_ID) ON UPDATE CASCADE,
    FOREIGN KEY (SENDER_ID) REFERENCES USERS(U_ID) ON UPDATE CASCADE
);


CREATE TABLE SPECS (
    S_ID BIGINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    S_TEXT VARCHAR(6) NOT NULL UNIQUE,
    CHECK (
        S_TEXT REGEXP '^[#][a-zA-Z][a-zA-Z][a-zA-Z][a-zA-Z][a-zA-Z]$'
    )
);


CREATE TABLE LOGINS (
    USER_NAME VARCHAR(20) NOT NULL,
    LOGIN_DATE DATETIME DEFAULT NOW(),
    FOREIGN KEY (USER_NAME) REFERENCES USERS(USER_NAME) ON UPDATE CASCADE
);

CREATE TABLE MSG (
    M_ID BIGINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    SENDER_ID BIGINT UNSIGNED NOT NULL,
    RECEIVER_ID BIGINT UNSIGNED NOT NULL,
    CONTEXT VARCHAR(256) DEFAULT NULL,
    AVA_ID BIGINT UNSIGNED DEFAULT NULL,
    MSG_DATE DATETIME DEFAULT NOW(),
    FOREIGN KEY (AVA_ID) REFERENCES AVA(A_ID), -- ON UPDATE CASCADE,
    FOREIGN KEY (SENDER_ID) REFERENCES USERS(U_ID) ON UPDATE CASCADE,
    FOREIGN KEY (RECEIVER_ID) REFERENCES USERS(U_ID) ON UPDATE CASCADE,
    CHECK (
        CONTEXT IS NOT NULL
        OR AVA_ID IS NOT NULL
    )
);


CREATE TABLE LIKES (
    USER_ID     BIGINT UNSIGNED NOT NULL,
    AVA_ID      BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (USER_ID, AVA_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(U_ID) ON UPDATE CASCADE,
    FOREIGN KEY (AVA_ID) REFERENCES AVA(A_ID) ON UPDATE CASCADE
);

CREATE TABLE FOLLOWS (
    FOLLOWER BIGINT UNSIGNED NOT NULL,
    FOLLOWED BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (FOLLOWER, FOLLOWED),
    FOREIGN KEY (FOLLOWER) REFERENCES USERS(U_ID) ON UPDATE CASCADE,
    FOREIGN KEY (FOLLOWED) REFERENCES USERS(U_ID) ON UPDATE CASCADE
);


CREATE TABLE BLOCKED_USERS (
    BLOCKER BIGINT UNSIGNED NOT NULL,
    BLOCKED BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (BLOCKER, BLOCKED),
    FOREIGN KEY (BLOCKER) REFERENCES USERS(U_ID) ON UPDATE CASCADE,
    FOREIGN KEY (BLOCKED) REFERENCES USERS(U_ID) ON UPDATE CASCADE
);  




CREATE TABLE AVA_SPECS (
    AVA_ID  BIGINT UNSIGNED NOT NULL,
    SPEC_ID BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY  (AVA_ID, SPEC_ID),
    FOREIGN KEY  (AVA_ID) REFERENCES AVA(A_ID) ON UPDATE CASCADE,
    FOREIGN KEY  (SPEC_ID) REFERENCES SPECS(S_ID) ON UPDATE CASCADE

);






